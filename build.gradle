plugins {
    id 'java'
<<<<<<< HEAD
    id 'org.springframework.boot' version '3.4.0'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'jacoco'
}

group = 'com.sprint.mission'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}
=======
}

group = 'com.sprint.mission'
version = '1.0-SNAPSHOT'
>>>>>>> 67d19b8276e693bf808f9d9f2844e6ad4539f06b

repositories {
    mavenCentral()
}

dependencies {
<<<<<<< HEAD
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.4'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    runtimeOnly 'org.postgresql:postgresql'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.mapstruct:mapstruct:1.6.3'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    implementation 'de.codecentric:spring-boot-admin-starter-client:3.4.5'
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        html.required = true
        csv.required = false
    }
}
jacoco {
    toolVersion = "0.8.10"
    reportsDirectory = layout.buildDirectory.dir('jacocoReport')
}
test {
    finalizedBy jacocoTestReport
}

tasks.named('test') {
    useJUnitPlatform()

}
=======
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

test {
    useJUnitPlatform()
}
>>>>>>> 67d19b8276e693bf808f9d9f2844e6ad4539f06b
